import { Card } from '@/components/ui/card';
import { Block } from '@/types/tilda';
import Icon from '@/components/ui/icon';

interface BlockLibraryProps {
  onAddBlock: (block: Omit<Block, 'id' | 'order'>) => void;
}

const blockTemplates = [
  {
    type: 'hero' as const,
    title: 'Hero —Å–µ–∫—Ü–∏—è',
    icon: 'Sparkles',
    preview: '–ë–æ–ª—å—à–æ–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–æ–π',
    content: {
      heading: '–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Å–∞–π—Ç—ã –±–µ–∑ –∫–æ–¥–∞',
      subheading: '–í–∏–∑—É–∞–ª—å–Ω—ã–π —Ä–µ–¥–∞–∫—Ç–æ—Ä –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è',
      buttonText: '–ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ',
    },
    styles: {
      backgroundColor: '#fce7f3',
      textColor: '#831843',
      padding: '6rem 2rem',
      textAlign: 'center' as const,
    },
  },
  {
    type: 'text' as const,
    title: '–¢–µ–∫—Å—Ç–æ–≤—ã–π –±–ª–æ–∫',
    icon: 'Type',
    preview: '–ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –ø–∞—Ä–∞–≥—Ä–∞—Ñ',
    content: {
      heading: '–û –Ω–∞—Å',
      text: '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π –∫–æ–º–ø–∞–Ω–∏–∏ –∏ —É—Å–ª—É–≥–∞—Ö. –î–æ–±–∞–≤—å—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞.',
    },
    styles: {
      backgroundColor: '#ffffff',
      textColor: '#1f2937',
      padding: '4rem 2rem',
      textAlign: 'center' as const,
    },
  },
  {
    type: 'features' as const,
    title: '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
    icon: 'Grid3x3',
    preview: '3 –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –∏–∫–æ–Ω–∫–∞–º–∏',
    content: {
      heading: '–ù–∞—à–∏ –ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞',
      items: [
        { title: '–ë—ã—Å—Ç—Ä–æ', description: '–ó–∞–ø—É—Å–∫ –∑–∞ 5 –º–∏–Ω—É—Ç', icon: '‚ö°' },
        { title: '–ü—Ä–æ—Å—Ç–æ', description: '–ë–µ–∑ –∫–æ–¥–∞ –∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è', icon: '‚ú®' },
        { title: '–ö—Ä–∞—Å–∏–≤–æ', description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω', icon: 'üíé' },
      ],
    },
    styles: {
      backgroundColor: '#f9fafb',
      textColor: '#1f2937',
      padding: '4rem 2rem',
      textAlign: 'center' as const,
    },
  },
  {
    type: 'image' as const,
    title: '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ',
    icon: 'Image',
    preview: '–ü–æ–ª–Ω–æ—à–∏—Ä–∏–Ω–Ω–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞',
    content: {
      imageUrl: 'https://images.unsplash.com/photo-1618005182384-a83a8bd57fbe?w=1200',
    },
    styles: {
      backgroundColor: '#ffffff',
      padding: '2rem',
      textAlign: 'center' as const,
    },
  },
  {
    type: 'button' as const,
    title: '–ö–Ω–æ–ø–∫–∞',
    icon: 'MousePointer',
    preview: 'Call-to-action –∫–Ω–æ–ø–∫–∞',
    content: {
      buttonText: '–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏',
      buttonLink: '#contact',
    },
    styles: {
      backgroundColor: '#ffffff',
      padding: '3rem 2rem',
      textAlign: 'center' as const,
    },
  },
];

export default function BlockLibrary({ onAddBlock }: BlockLibraryProps) {
  return (
    <div className="space-y-4">
      <h3 className="font-semibold text-gray-900">–ë–∏–±–ª–∏–æ—Ç–µ–∫–∞ –±–ª–æ–∫–æ–≤</h3>
      <div className="grid grid-cols-1 gap-3">
        {blockTemplates.map((template) => (
          <Card
            key={template.type}
            className="p-4 cursor-pointer hover:shadow-md hover:border-pink-300 transition-all group"
            onClick={() => onAddBlock(template)}
          >
            <div className="flex items-start space-x-3">
              <div className="w-10 h-10 rounded-lg bg-gradient-to-br from-pink-100 to-rose-100 flex items-center justify-center group-hover:from-pink-200 group-hover:to-rose-200 transition-colors">
                <Icon name={template.icon as any} size={20} className="text-pink-600" />
              </div>
              <div className="flex-1 min-w-0">
                <h4 className="font-medium text-gray-900 mb-1">
                  {template.title}
                </h4>
                <p className="text-sm text-gray-500 line-clamp-2">
                  {template.preview}
                </p>
              </div>
            </div>
          </Card>
        ))}
      </div>
    </div>
  );
}